buildscript {
    ext {
        springBootVersion = '3.0.7'
        queryDslVersion = "5.0.0"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.7'
}

apply plugin: 'java-library'

bootJar {
    enabled = false
}

allprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    group = 'com.bankle'
    version = '0.0.1-SNAP'

    repositories {
        mavenCentral()
        google()
        maven { url 'https://oss.jfrog.org/libs-snapshot' }
    }
    sourceCompatibility = '17'
    targetCompatibility = '17'
    apply plugin: 'java-library'
    compileJava.options.encoding = 'UTF-8'
}

subprojects {
    configurations {
        configureEach{
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-devtools:3.0.3'


        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
        implementation "org.springframework.boot:spring-boot-configuration-processor"
        implementation "io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64"
        implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.3'
        implementation 'org.springframework.boot:spring-boot-autoconfigure:3.0.2'
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'

        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
        implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.14'

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

        // jddb 아래 2개한쌍
        runtimeOnly 'com.mysql:mysql-connector-j'
        implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

        implementation 'org.modelmapper:modelmapper:3.1.1'
        implementation 'commons-io:commons-io:2.11.0'

        // log4j2
//        implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
//        implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
//        implementation 'org.apache.logging.log4j:log4j-jcl:2.20.0'
//        testImplementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'

//        implementation 'com.google.firebase:firebase-admin:9.1.1'

        implementation 'com.google.firebase:firebase-admin:9.2.0'
        implementation 'com.google.code.gson:gson:2.9.0'

        // java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter 에러로 추가해준다.
        implementation 'javax.xml.bind:jaxb-api:2.3.0'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        //Gson|| Json
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'com.googlecode.json-simple:json-simple:1.1.1'

        //websocket
        implementation 'org.springframework.boot:spring-boot-starter-websocket:3.0.2'
        implementation 'org.springframework.boot:spring-boot-starter-amqp:3.0.2'
        implementation 'org.springframework.boot:spring-boot-starter-reactor-netty:3.0.2'

        // kakaocert
//        implementation 'kr.co.linkhub:kakaocert-spring-boot-starter:1.0.0'
        implementation 'kr.co.linkhub:barocert-spring-boot-starter:1.4.0'

        //popbill
        implementation 'kr.co.linkhub:popbill-spring-boot-starter:1.13.0'

        // https://mvnrepository.com/artifact/org.jsoup/jsoup
        implementation 'org.jsoup:jsoup:1.15.3'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'

        implementation group: 'com.github.jai-imageio', name: 'jai-imageio-core', version: '1.4.0'
        implementation files("${rootProject.projectDir}\\libs\\OkCert3-java1.5-2.3.1.jar")

    }
    test {
        useJUnitPlatform()
    }
}

/* 관리자 비즈니스 모듈  */
project(":dagawon-admin") {
    dependencies {
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

        api project(":Common")
    }
    bootJar {
        enabled = true
        mainClass = 'com.bankle.AdminApplication'
        archiveFileName = 'admin-server.jar'
    }
    jar {
        enabled = false
    }
}

/* woori 비즈니스 로직관련 모듈  */
project(":dagawon-app") {
    dependencies {
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

        api project(":Common")
    }
    bootJar {
        enabled = true
        mainClass = 'com.bankle.AppApplication'
        archiveFileName = 'appanbu-server.jar'
    }
    jar {
        enabled = false
    }
}

/* woori Batch Service 관련 */
project(":dagawon-batch") {
    dependencies {
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

        api project(":Common")
    }
    bootJar {
        enabled = true
        mainClass = 'com.bankle.BatchApplication'
        archiveFileName = 'batch-server.jar'
    }
    jar {
        enabled = false
    }
}

///* Config 파일 */
//project(":Config") {
//    dependencies {
//    }
//    bootJar { enabled = false }
//    jar { enabled = true }
//}

/* Entity, REPO, DTO, Util , security, jwt, logging, filter 클래스 등등 */
project(":Common") {
    dependencies {
        implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
        // === QueryDsl 시작 ===
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
        // === QueryDsl 끝 ===
        implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

        // mapstruct
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"
        testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"
        implementation "org.projectlombok:lombok-mapstruct-binding:0.2.0"
        annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        //
        implementation 'org.springframework.data:spring-data-envers:3.1.4'

        //jpa log
        // implementation "com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.5.7"

        // https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk18on
        implementation group: 'org.bouncycastle', name: 'bcprov-jdk18on', version: '1.77'

        // mail
        implementation 'org.springframework.boot:spring-boot-starter-mail'

        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

        // httpclient(RestTemplate)
        implementation 'org.apache.httpcomponents:httpclient:4.5.13'

        //org.apache.poi
        implementation 'org.apache.poi:poi:3.9'
        implementation 'org.apache.poi:poi-ooxml:3.9'
    }

    // Querydsl
    def generated = 'src/main/generated'

    // java source set 에 querydsl QClass 위치 추가
    sourceSets {
        main.java.srcDirs += [generated]
    }
    // gradle clean 시에 QClass 디렉토리 삭제
    clean {
        delete file(generated)
    }


    bootJar { enabled = false }
    jar { enabled = true }
}
